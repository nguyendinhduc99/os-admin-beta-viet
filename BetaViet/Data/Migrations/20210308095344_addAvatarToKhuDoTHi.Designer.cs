// <auto-generated />
using System;
using BetaViet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BetaViet.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210308095344_addAvatarToKhuDoTHi")]
    partial class addAvatarToKhuDoTHi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BetaViet.Models.AnhTrangChu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnhTrangChu");
                });

            modelBuilder.Entity("BetaViet.Models.BaiViet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DanhMucBaiVietId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucBaiVietId");

                    b.ToTable("BaiViet");
                });

            modelBuilder.Entity("BetaViet.Models.BoLoc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Dropdown")
                        .HasColumnType("bit");

                    b.Property<string>("DropdownValuesJSON")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Page")
                        .HasColumnType("int");

                    b.Property<string>("ValuesJSON")
                        .HasColumnName("Values")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BoLoc");
                });

            modelBuilder.Entity("BetaViet.Models.DangThiCong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvatarsJSON")
                        .HasColumnName("Avatars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DoiThiCongId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DonViThietKeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FiltersJSON")
                        .HasColumnName("Filters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdeaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSectionsJSON")
                        .HasColumnName("ImageSections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KhuDoThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaiDuAn")
                        .HasColumnType("int");

                    b.Property<int?>("LoaiDuAn2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NhaThietKeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertiesJSON")
                        .HasColumnName("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoLuotTruyCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TienDoThiCong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TienDoThiCong2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DoiThiCongId");

                    b.HasIndex("DonViThietKeId");

                    b.HasIndex("NhaThietKeId");

                    b.ToTable("DangThiCong");
                });

            modelBuilder.Entity("BetaViet.Models.DanhMucBaiViet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhMucBaiViet");
                });

            modelBuilder.Entity("BetaViet.Models.DanhMucVideo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhMucVideo");
                });

            modelBuilder.Entity("BetaViet.Models.DoiThiCong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarsJSON")
                        .HasColumnName("Avatars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiltersJSON")
                        .HasColumnName("Filters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertiesJSON")
                        .HasColumnName("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DoiThiCong");
                });

            modelBuilder.Entity("BetaViet.Models.DonViThanhVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertiesJSON")
                        .HasColumnName("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DonViThanhVien");
                });

            modelBuilder.Entity("BetaViet.Models.DonViThietKe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiltersJSON")
                        .HasColumnName("Filters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertiesJSON")
                        .HasColumnName("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DonViThietKe");
                });

            modelBuilder.Entity("BetaViet.Models.DuAnKienTruc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvatarsJSON")
                        .HasColumnName("Avatars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FiltersJSON")
                        .HasColumnName("Filters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdeaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSectionsJSON")
                        .HasColumnName("ImageSections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KhuDoThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NhaThietKeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertiesJSON")
                        .HasColumnName("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoLuotTruyCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NhaThietKeId");

                    b.ToTable("DuAnKienTruc");
                });

            modelBuilder.Entity("BetaViet.Models.DuAnNoiThat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvatarsJSON")
                        .HasColumnName("Avatars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FiltersJSON")
                        .HasColumnName("Filters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdeaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSectionsJSON")
                        .HasColumnName("ImageSections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KhuDoThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NhaThietKeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertiesJSON")
                        .HasColumnName("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoLuotTruyCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NhaThietKeId");

                    b.ToTable("DuAnNoiThat");
                });

            modelBuilder.Entity("BetaViet.Models.FormDangKy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormDangKy");
                });

            modelBuilder.Entity("BetaViet.Models.KhuDoThi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhuDoThi");
                });

            modelBuilder.Entity("BetaViet.Models.KhuyenmaiKienTruc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhuyenmaiKienTruc");
                });

            modelBuilder.Entity("BetaViet.Models.KhuyenmaiNoiThat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhuyenmaiNoiThat");
                });

            modelBuilder.Entity("BetaViet.Models.LanToaCongDong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LanToaCongDong");
                });

            modelBuilder.Entity("BetaViet.Models.LoiThe_ShowRoom_BoSuuTap", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvatarsJSON")
                        .HasColumnName("Avatars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FiltersJSON")
                        .HasColumnName("Filters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdeaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSectionsJSON")
                        .HasColumnName("ImageSections")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KhuDoThi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NhaThietKeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertiesJSON")
                        .HasColumnName("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoLuotTruyCap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NhaThietKeId");

                    b.ToTable("LoiThe_ShowRoom_BoSuuTap");
                });

            modelBuilder.Entity("BetaViet.Models.NhaThietKe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DonViThanhVienId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DonViThietKeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FiltersJSON")
                        .HasColumnName("Filters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertiesJSON")
                        .HasColumnName("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonViThanhVienId");

                    b.HasIndex("DonViThietKeId");

                    b.ToTable("NhaThietKe");
                });

            modelBuilder.Entity("BetaViet.Models.SEOText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Page")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SEOText");
                });

            modelBuilder.Entity("BetaViet.Models.TienDoThiCong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Page")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TienDoThiCong");
                });

            modelBuilder.Entity("BetaViet.Models.ToanCanh360KienTruc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anh360")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ToanCanh360KienTruc");
                });

            modelBuilder.Entity("BetaViet.Models.ToanCanh360NoiThat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anh360")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ToanCanh360NoiThat");
                });

            modelBuilder.Entity("BetaViet.Models.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DanhMucVideoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SEODescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEOTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoutubeURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucVideoId");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BetaViet.Models.BaiViet", b =>
                {
                    b.HasOne("BetaViet.Models.DanhMucBaiViet", "DanhMucBaiViet")
                        .WithMany()
                        .HasForeignKey("DanhMucBaiVietId");
                });

            modelBuilder.Entity("BetaViet.Models.DangThiCong", b =>
                {
                    b.HasOne("BetaViet.Models.DoiThiCong", "DoiThiCong")
                        .WithMany("DangThiCong")
                        .HasForeignKey("DoiThiCongId");

                    b.HasOne("BetaViet.Models.DonViThanhVien", "DonViThietKe")
                        .WithMany()
                        .HasForeignKey("DonViThietKeId");

                    b.HasOne("BetaViet.Models.NhaThietKe", "NhaThietKe")
                        .WithMany()
                        .HasForeignKey("NhaThietKeId");
                });

            modelBuilder.Entity("BetaViet.Models.DuAnKienTruc", b =>
                {
                    b.HasOne("BetaViet.Models.NhaThietKe", "NhaThietKe")
                        .WithMany()
                        .HasForeignKey("NhaThietKeId");
                });

            modelBuilder.Entity("BetaViet.Models.DuAnNoiThat", b =>
                {
                    b.HasOne("BetaViet.Models.NhaThietKe", "NhaThietKe")
                        .WithMany()
                        .HasForeignKey("NhaThietKeId");
                });

            modelBuilder.Entity("BetaViet.Models.LoiThe_ShowRoom_BoSuuTap", b =>
                {
                    b.HasOne("BetaViet.Models.NhaThietKe", "NhaThietKe")
                        .WithMany()
                        .HasForeignKey("NhaThietKeId");
                });

            modelBuilder.Entity("BetaViet.Models.NhaThietKe", b =>
                {
                    b.HasOne("BetaViet.Models.DonViThanhVien", "DonViThanhVien")
                        .WithMany()
                        .HasForeignKey("DonViThanhVienId");

                    b.HasOne("BetaViet.Models.DonViThietKe", "DonViThietKe")
                        .WithMany("NhaThietKes")
                        .HasForeignKey("DonViThietKeId");
                });

            modelBuilder.Entity("BetaViet.Models.Video", b =>
                {
                    b.HasOne("BetaViet.Models.DanhMucVideo", "DanhMucVideo")
                        .WithMany()
                        .HasForeignKey("DanhMucVideoId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
