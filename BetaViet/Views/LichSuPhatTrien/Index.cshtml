@model BetaViet.Models.LichSuPhatTrien
<form asp-action="Index">
<section id="vueApp">
    <h3>LichSuPhatTrien</h3>
    <div class="form-group">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" />
    </div>
    <hr />
    <div class="form-group">
        <label asp-for="LichSuPhatTrienJSON" class="control-label"></label>
        <input type="hidden" asp-for="LichSuPhatTrienJSON" class="form-control" />
    </div>

    <div class="form-group">
        <draggable :list="avatars"
                   :disabled="false"
                   class="p-0 row"
                   ghost-class="ghost"
                   @@end='$("[name=LichSuPhatTrienJSON]").val(JSON.stringify(avatars))'>
            <aside class="col-3" v-for="(item,i) in avatars" :key="'avatar' + i">
                <div class="d-flex align-items-center justify-content-between mb-1 badge badge-secondary">
                    <img :src="item.avatar" class="rounded" style=" width: 100px;">
                    <button class="btn btn-sm m-0 p-0 px-1" @@click.prevent.stop="onAvatarRemoved(i)">
                        <i class="ti-minus"></i>
                    </button>
                </div>
                <h3>{{item.year}}</h3>
                <div>{{item.content}}</div>
            </aside>
        </draggable>

        <div class="">
            <aside class="input-group">
                <input type="hidden" class="form-control" placeholder="Ảnh" v-model="addingAvatar">
                <div style="flex: 1;">
                    <input type="file" multiple class="form-control overflow-hidden w-100" id="addingAvatar"
                           @@change.stop="handleFileChange('addingAvatar', $event)">
                    <input type="text" class="form-control w-100" placeholder="Năm" v-model="addingAvatar.year">
                </div>
                <div class="input-group-addon text-center d-flex justify-content-center">
                    <button class="btn" @@click.prevent.stop="onAvatarAdded">
                        <i class="ti-plus"></i>
                    </button>
                </div>
            </aside>
            <textarea type="text" class="form-control w-100" placeholder="Mô tả" v-model="addingAvatar.content"></textarea>
        </div>
        <br />
        <div class="form-group">
            <input type="submit" value="Lưu" class="btn btn-primary" />
        </div>
    </div>
</section>
</form>
@section Scripts {
    <script src="/lib/Vue.Draggable/Sortable.min.js"></script>
    <script src="/lib/Vue.Draggable/vuedraggable.umd.min.js"></script>
    <script>
        Vue.component('vue-draggable', window.vuedraggable)
        var app = new Vue({
            el: '#vueApp',
            data: {
                addingAvatar: [],
                avatars: @Html.Raw(Model.LichSuPhatTrienJSON != null ? JsonHelper.Serialize(Model.LichSuPhatTrien_Content) : "[]"),
            },
            watch: {

            },
            computed: {

            },
            methods: {
                async onAvatarAdded() {

                        var upload = new Upload(this.addingAvatar);
                        try {
                            let x = await upload.doUploadPromise();
                            console.log(x);
                            this.addingAvatar.avatar = x;
                            this.avatars.push(this.addingAvatar);

                        } catch (err) {
                            console.log(err)
                        }


                    this.addingAvatar = {};
                    $("#addingAvatar").val("");

                    $("[name=LichSuPhatTrienJSON]").val(JSON.stringify(this.avatars));
                },
                onAvatarRemoved(i) {
                    this.avatars.splice(i, 1);

                    $("[name=LichSuPhatTrienJSON]").val(JSON.stringify(this.avatars));
                },
                handleFileChange(model, e) {
                    let files = e.target.files;
                    let file = e.target.files[0];
                    console.log(model, e, file);
                    this[model] = file;
                },
            },
            mounted() {

            }
        })</script>
}
