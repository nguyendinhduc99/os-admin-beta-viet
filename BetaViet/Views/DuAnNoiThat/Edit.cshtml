@model BetaViet.Models.DuAnNoiThat

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //var tienDoThiCongList = ViewData["tienDoThiCongList"] as List<TienDoThiCong>;
}

<h1>Sửa</h1>

<h4>Dự án nội thất</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="CreatedOn" />

            <section id="vueApp">
                <partial name="~/Views/Shared/_PartiaKhuDoThi.cshtml" />
                <div class="form-group">
                    <label asp-for="ModifiedOn" class="control-label"></label>
                    <input asp-for="ModifiedOn" class="form-control" />
                    <span asp-validation-for="ModifiedOn" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ProjectInfo" class="control-label"></label>
                    <input asp-for="ProjectInfo" class="form-control" />
                    <span asp-validation-for="ProjectInfo" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="IdeaDescription" class="control-label"></label>
                    <div class="editor">@Html.Raw(Model.IdeaDescription)</div>
                    <input type="hidden" asp-for="IdeaDescription" class="form-control" />
                    <span asp-validation-for="IdeaDescription" class="text-danger"></span>
                </div>
                @*<div class="form-group">
            <label asp-for="TrangThaiDuAn" class="control-label"></label>
            <select asp-for="TrangThaiDuAn" class="form-control">
                <option value="0">Mới</option>
                <option value="1">Đang thi công</option>
                <option value="2">Đã xong</option>
            </select>
            <span asp-validation-for="TrangThaiDuAn" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="TienDoThiCong" class="control-label"></label>
            <select asp-for="TienDoThiCong" class="form-control" data-val="@Model.TienDoThiCong">
            </select>
            <span asp-validation-for="TienDoThiCong" class="text-danger"></span>
        </div>*@
                <div class="form-group">
                    <label asp-for="NhaThietKe" class="control-label"></label>
                    <select asp-for="NhaThietKeId" class="form-control" data-val="@Model.NhaThietKeId"></select>
                    <span asp-validation-for="NhaThietKeId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="AvatarsJSON" class="control-label"></label>
                    <input type="hidden" asp-for="AvatarsJSON" class="form-control" />

                    <draggable :list="avatars"
                               :disabled="false"
                               class="p-0 row"
                               ghost-class="ghost"
                               @@end='$("[name=AvatarsJSON]").val(JSON.stringify(avatars))'>
                        <aside class="col-3" v-for="(item,i) in avatars" :key="'avatar' + i">
                            <div class="d-flex align-items-center justify-content-between mb-1 badge badge-secondary">
                                <img :src="item" class="rounded" style=" width: 100px;">
                                <button class="btn btn-sm m-0 p-0 px-1" @@click.prevent.stop="onAvatarRemoved(i)">
                                    <i class="ti-minus"></i>
                                </button>
                            </div>
                        </aside>
                    </draggable>

                    <div class="form-group input-group">
                        <input type="hidden" class="form-control" placeholder="Ảnh" v-model="addingAvatar">
                        <input type="file" multiple class="form-control" id="addingAvatar" @@change.stop="handleFileChange('addingAvatar', $event)">
                        <div class=" input-group-addon">
                            <button class="btn" @@click.prevent.stop="onAvatarAdded">
                                <i class="ti-plus"></i>
                            </button>
                        </div>
                    </div>
                    <span asp-validation-for="AvatarsJSON" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PropertiesJSON" class="control-label"></label>
                    <input type="hidden" asp-for="PropertiesJSON" class="form-control" />

                    <draggable :list="properties"
                               :disabled="false"
                               class="p-0 row"
                               ghost-class="ghost"
                               @@end='$("[name=PropertiesJSON]").val(JSON.stringify(properties))'>
                        <aside class="col-3" v-for="(item,i) in properties">
                            <div class="d-flex align-items-center justify-content-between mb-1 badge badge-secondary">
                                <span>
                                    {{item.name}}
                                    @*: <b>{{item.value}}</b>*@
                                    <input type="text" class="" placeholder="" v-model="item.value" @@keyup="storePropertyJSON">
                                </span>
                                <button class="btn btn-sm m-0 p-0 px-1" @@click.prevent.stop="onPropertyRemoved(i)">
                                    <i class="ti-minus"></i>
                                </button>
                            </div>
                        </aside>
                    </draggable>


                    <div class="form-group input-group">
                        <input type="text" class="form-control" placeholder="Tên" v-model="addingProperty.name">
                        <input type="text" class="form-control" placeholder="Giá trị" v-model="addingProperty.value">
                        <div class=" input-group-addon">
                            <button class="btn" @@click.prevent.stop="onPropertyAdded">
                                <i class="ti-plus"></i>
                            </button>
                        </div>
                    </div>
                    <span asp-validation-for="PropertiesJSON" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="FiltersJSON" class="control-label"></label>
                    <input type="hidden" asp-for="FiltersJSON" class="form-control" />

                    <draggable :list="filters"
                               :disabled="false"
                               class="p-0 row"
                               ghost-class="ghost"
                               @@end='$("[name=FiltersJSON]").val(JSON.stringify(filters))'>
                        <aside class="col-3" v-for="(item,i) in filters">
                            <div class="d-flex align-items-center justify-content-between mb-1 badge badge-secondary">
                                <span>
                                    {{item.name}}: <b>{{item.value}}</b>
                                </span>
                                <button class="btn btn-sm m-0 p-0 px-1" @@click.prevent.stop="onFilterRemoved(i)">
                                    <i class="ti-minus"></i>
                                </button>
                            </div>
                        </aside>
                    </draggable>


                    <div class="form-group input-group" style="z-index: 5;">
                        <select class="form-control w-50" v-model="addingFilter.name">
                            <option v-for="x in standardFilters" :value="x.name">{{x.name}}</option>
                        </select>
                        @*<input type="text" class="form-control" placeholder="Tên" v-model="addingFilter.name">*@
                        @*<select class="form-control" v-model="addingFilter.value">
                    <option v-for="x in standardFilterValues" :value="x">{{x}}</option>
                </select>*@
                        <vue-multiselect v-model="addingFilter.value" tag-placeholder="Giá trị" placeholder="" :options="standardFilterValues" :multiple="true" :taggable="true"></vue-multiselect>
                        @*<input type="text" class="form-control" placeholder="Giá trị" v-model="addingFilter.value">*@
                        <div class=" input-group-addon">
                            <button class="btn" @@click.prevent.stop="onFilterAdded">
                                <i class="ti-plus"></i>
                            </button>
                        </div>
                    </div>
                    <span asp-validation-for="FiltersJSON" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ImageSectionsJSON" class="control-label"></label>
                    <input type="hidden" asp-for="ImageSectionsJSON" class="form-control" />

                    <draggable :list="imageSections"
                               :disabled="false"
                               class="p-0"
                               ghost-class="ghost"
                               @@end='$("[name=ImageSectionsJSON]").val(JSON.stringify(imageSections))'>
                        <aside class="bg-light p-3 mb-3" v-for="(item,i) in imageSections">
                            <div class="row" style=" position: sticky; top: 65px; z-index: 4;">
                                <div class="col-6">
                                    <div class="form-group input-group m-0">
                                        <div class=" input-group-addon bg-white">
                                            <button class="btn" @@click.prevent.stop="onImageSectionRemoved(i)">
                                                <i class="ti-minus"></i>
                                            </button>
                                        </div>
                                        <input type="text" class="form-control w-100 font-weight-bold"
                                               placeholder="Tên nội dung" v-model="item.name"
                                               @@keyup="storeImageSectionJSON">
                                    </div>
                                </div>
                                <div class="col-6 form-group input-group m-0" style="z-index: 5;">
                                    <select class="form-control" v-model="item._addingImageFilter.name" @@change="onImageSectionFilterChanged(item, $event)">
                                        <option v-for="x in standardFilters.filter(x => ['Thuộc tính','Loại phòng','Phong cách'].includes(x.name))" :value="x.name">{{x.name}}</option>
                                    </select>
                                    <select class="form-control" v-model="item._addingImageFilter.value">
                                        <option v-for="x in item._standardFilterValues" :value="x">{{x}}</option>
                                    </select>
                                    <div class=" input-group-addon bg-white align-self-start">
                                        <button class="btn" @@click.prevent.stop="onImageSectionFilterAdded(item)">
                                            <i class="ti-plus"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="p-0 row mb-3">
                                <aside class="col-3" v-for="(f,i) in item.filters">
                                    <div class="d-flex align-items-center justify-content-between mb-1 badge badge-secondary">
                                        <span>
                                            {{f.name}}: <b>{{f.value}}</b>
                                        </span>
                                        <button class="btn btn-sm m-0 p-0 px-1" @@click.prevent.stop="onImageSectionFilterRemoved(item, i)">
                                            <i class="ti-minus"></i>
                                        </button>
                                    </div>
                                </aside>
                            </div>
                            <div class="row">
                                <div class="col-4" v-for="(img,j) in item.images">
                                    <div class="card">
                                        <div class="card-media">
                                            <img class="img-responsive" :src="img.url" alt="" style=" height: 250px; object-fit: cover; object-position: center;">
                                            <button class="btn btn-sm m-0 p-0 px-1"
                                                    style="position: absolute; top: 10px; right: 10px;"
                                                    @@click.prevent.stop="onImageRemoved(j, item)">
                                                <i class="ti-minus"></i>
                                            </button>
                                        </div>
                                        <div class="card-block p-1">
                                            <h4 class="mb-2 no-mrg-top">
                                                <input type="text" class="form-control w-100"
                                                       placeholder="Tiêu đề ảnh" v-model="img.title"
                                                       @@keyup="storeImageSectionJSON">
                                            </h4>
                                            <p>
                                                <input type="text" class="form-control w-100"
                                                       placeholder="Mô tả ảnh" v-model="img.description"
                                                       @@keyup="storeImageSectionJSON">
                                            </p>
                                            @*<div class="p-0 row">
                                        <aside class="col-6" v-for="(item,i) in img.filters">
                                            <div class="d-flex align-items-center justify-content-between mb-1 badge badge-secondary">
                                                <span>
                                                    {{item.name}}: <b>{{item.value}}</b>
                                                </span>
                                                <button class="btn btn-sm m-0 p-0 px-1" @@click.prevent.stop="onImageFilterRemoved(img, i)">
                                                    <i class="ti-minus"></i>
                                                </button>
                                            </div>
                                        </aside>
                                    </div>*@
                                        </div>
                                        @*<div class="card-footer border top p-0" style="min-height: initial;">
                                    <div class="form-group input-group m-0" style="z-index: 5;">
                                        <select class="form-control" v-model="img._addingImageFilter.name" @@change="onImageFilterChanged(img, $event)">
                                            <option v-for="x in standardFilters" :value="x.name">{{x.name}}</option>
                                        </select>
                                        <select class="form-control" v-model="img._addingImageFilter.value">
                                            <option v-for="x in img._standardFilterValues" :value="x">{{x}}</option>
                                        </select>
                                        <div class=" input-group-addon">
                                            <button class="btn" @@click.prevent.stop="onImageFilterAdded(img)">
                                                <i class="ti-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>*@
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="form-group input-group">
                                        <input type="hidden" class="form-control" placeholder="Ảnh" v-model="item._addingImage">
                                        <div style="flex: 1;">
                                            <input type="file" multiple class="form-control overflow-hidden w-100" :id="'imageSections' + i"
                                                   @@change.stop="handleFileImageSectionChange(item, i, $event)">
                                            <input type="text" class="form-control w-100" placeholder="Tiêu đề ảnh" v-model="item._addingImageTitle">
                                            <input type="text" class="form-control w-100" placeholder="Mô tả ảnh" v-model="item._addingImageDescription">
                                        </div>
                                        <div class="input-group-addon text-center d-flex justify-content-center">
                                            <button class="btn" @@click.prevent.stop="onImageAdded(item)">
                                                <i class="ti-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </aside>
                    </draggable>


                    <div class="form-group input-group mt-3">
                        <input type="text" class="form-control" placeholder="Tên nội dung" v-model="addingImageSection.name">
                        <div class=" input-group-addon">
                            <button class="btn" @@click.prevent.stop="onImageSectionAdded">
                                <i class="ti-plus"></i>
                            </button>
                        </div>
                    </div>
                    <span asp-validation-for="ImageSectionsJSON" class="text-danger"></span>
                </div>

                <partial name="~/Views/Shared/_PartialSEO.cshtml" />
            </section>

            <partial name="~/Views/Shared/_CommonSlugVueAppPartial.cshtml" />

            <div class="form-group">
                <input type="submit" value="Lưu" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Quay lại danh sách</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script src="~/lib/ckeditor5/build/ckeditor.js"></script>
    @*<script src="/lib/vue-multiselect/vue-multiselect.min.js"></script>
        <link rel="stylesheet" href="/lib/vue-multiselect/vue-multiselect.min.css">

        <script src="/lib/Vue.Draggable/Sortable.min.js"></script>
        <script src="/lib/Vue.Draggable/vuedraggable.umd.min.js"></script>*@

    <script>
        $(document).ready(function () {
            ClassicEditor
                .create(document.querySelector('.editor'), ckeditor5Options)
                .then(editor => {
                    window.editor = editor;

                    editor.model.document.on('change', () => {
                        console.log('the data has changed!');
                        $("[name=IdeaDescription]").val(editor.getData());
                    });
                    //editor.editing.view.document.on('keydown', (evt, data) => {
                    //    console.log(data);

                    //});
                })
                .catch(error => {
                    console.error('Oops, something went wrong!');
                    console.error('Please, report the following error on https://github.com/ckeditor/ckeditor5/issues with the build id and the error stack trace:');
                    console.warn('Build id: iydo686yl1oa-qrolc6ajm7ow');
                    console.error(error);
                });

            $.get("/api/tiendothicong").then(x => {
                $("[name=TienDoThiCong]").append("<option></option>");
                for (let item of x) {
                    $("[name=TienDoThiCong]").append(`<option value="${item.value}">${item.value}</option>`);
                }
                $("[name=TienDoThiCong]").val($("[name=TienDoThiCong]").attr("data-val"));
            })

            $.get("/api/nhathietke").then(x => {
                $("[name=NhaThietKeId]").append("<option></option>");
                for (let item of x) {
                    $("[name=NhaThietKeId]").append(`<option value="${item.id}">${item.name}</option>`);
                }
                $("[name=NhaThietKeId]").val($("[name=NhaThietKeId]").attr("data-val"));
            });
        })

        var linkPrefix = 'https://betaviet.com.vn/du-an-thiet-ke/noi-that/'
    </script>


    <script>
    let avatars = @Html.Raw(Model.AvatarsJSON != null ? Model.AvatarsJSON : "[]");
    let properties = @Html.Raw(Model.PropertiesJSON != null ? Model.PropertiesJSON : "[]");
    let filters = @Html.Raw(Model.FiltersJSON != null ? Model.FiltersJSON : "[]");
    let imageSections = @Html.Raw(Model.ImageSectionsJSON != null ? Model.ImageSectionsJSON : "[]");
    </script>

    @{await Html.RenderPartialAsync("_CommonDuAnVueAppPartial");}

    @*<script>
            Vue.component('vue-multiselect', window.VueMultiselect.default)
            Vue.component('vue-draggable', window.vuedraggable)
        var app = new Vue({
            el: '#vueApp',
            data: {
                addingAvatar: '',
                avatars: @Html.Raw(Model.AvatarsJSON != null ? Model.AvatarsJSON : "[]"),
                addingProperty: {},
                properties: @Html.Raw(Model.PropertiesJSON != null ? Model.PropertiesJSON : "[]"),
                addingFilter: {},
                filters: @Html.Raw(Model.FiltersJSON != null ? Model.FiltersJSON : "[]"),
                addingImageSection: {
                    name: '',
                    images: [],
                    _addingImage: ''
                },
                imageSections: @Html.Raw(Model.ImageSectionsJSON != null ? Model.ImageSectionsJSON : "[]"),

                standardFilters: [],
                standardFilterValues: []
            },
            watch: {
                "addingFilter.name"(newVal, oldVal) {
                    console.log('watch addingFilter.name: ', newVal);
                    this.standardFilterValues = _.get(this.standardFilters.find(x => x.name == newVal), 'values', []);
                }
            },
            computed: {
                submittingImageSctions() {
                    return this.imageSections.map(x => ({ name: x.name, images: x.images }));
                }
            },
            methods: {
                onAvatarAdded() {
                    //$("#addingAvatar").prop("files")[0]
                    var upload = new Upload(this.addingAvatar);
                    upload.doUpload(x => {
                        console.log(x);
                        this.avatars.push(x);
                        this.addingAvatar = '';
                        $("#addingAvatar").val("");

                        $("[name=AvatarsJSON]").val(JSON.stringify(this.avatars));
                    }, err => {
                        console.log(err)
                    });
                },
                onAvatarRemoved(i) {
                    this.avatars.splice(i, 1);

                    $("[name=AvatarsJSON]").val(JSON.stringify(this.avatars));
                },

                onPropertyAdded() {
                    this.properties.push(this.addingProperty);
                    this.addingProperty = {};

                    $("[name=PropertiesJSON]").val(JSON.stringify(this.properties));
                },
                onPropertyRemoved(i) {
                    this.properties.splice(i, 1);

                    $("[name=PropertiesJSON]").val(JSON.stringify(this.properties));
                },

                onFilterAdded() {
                    this.filters.push(this.addingFilter);
                    this.addingFilter = {};

                    $("[name=FiltersJSON]").val(JSON.stringify(this.filters));
                },
                onFilterRemoved(i) {
                    this.filters.splice(i, 1);

                    $("[name=FiltersJSON]").val(JSON.stringify(this.filters));
                },

                onImageSectionAdded() {
                    this.imageSections.push(this.addingImageSection);
                    this.addingImageSection = {
                        name: '',
                        images: []
                    };

                    $("[name=ImageSectionsJSON]").val(JSON.stringify(this.submittingImageSctions));
                },
                onImageSectionRemoved(i) {
                    this.imageSections.splice(i, 1);

                    $("[name=ImageSectionsJSON]").val(JSON.stringify(this.submittingImageSctions));
                },
                onImageAdded(item) {
                    var upload = new Upload(item._addingImage);
                    upload.doUpload(x => {
                        console.log(x);
                        item.images.push(x);
                        $(`#imageSections${item._addingIndex}`).val("");
                        item._addingImage = '';
                        item._addingIndex = '';

                        $("[name=ImageSectionsJSON]").val(JSON.stringify(this.submittingImageSctions));
                    }, err => {
                        console.log(err)
                    });
                },
                onImageRemoved(i, item) {
                    item.images.splice(i, 1);

                    $("[name=ImageSectionsJSON]").val(JSON.stringify(this.submittingImageSctions));
                },

                handleFileChange(model, e) {
                    let file = e.target.files[0];
                    console.log(model, e, file);
                    this[model] = file;
                },
                handleFileImageSectionChange(model, i, e) {
                    let file = e.target.files[0];
                    console.log(model, e, file);
                    model._addingImage = file;
                    model._addingIndex = i;
                }
            },
            mounted() {
                $.getJSON('/api/boloc?page=0').then(x => {
                    console.log(x);
                    this.standardFilters = x.map(y => ({
                        name: y.name,
                        values: [...y.values, ...(y.dropdownValues || [])]
                    }));
                })
            }
        })
        </script>*@
}
