@model BetaViet.Models.LienHe
<form asp-action="Index">
    <section id="vueApp">
        <h3>LienHe</h3>
        <div class="form-group">
            <label asp-for="Title" class="control-label"></label>
            <input asp-for="Title" class="form-control" />
        </div>
        <hr />
        <div class="form-group">
            <label asp-for="LienHe_ContentJSON" class="control-label"></label>
            <input type="hidden" asp-for="LienHe_ContentJSON" class="form-control" />
        </div>

        <div class="form-group">
            <draggable :list="avatars"
                       :disabled="false"
                       class="p-0 row"
                       ghost-class="ghost"
                       @@end='$("[name=LienHe_ContentJSON]").val(JSON.stringify(avatars))'>
                <aside class="col-3" v-for="(item,i) in avatars" :key="'avatar' + i">
                    <div class="d-flex align-items-center justify-content-between mb-1 badge badge-secondary">
                        <img :src="item.avatar" class="rounded" style=" width: 100px;">
                        <button class="btn btn-sm m-0 p-0 px-1" @@click.prevent.stop="onAvatarRemoved(i)">
                            <i class="ti-minus"></i>
                        </button>
                    </div>
                    <h3>{{item.title}}</h3>
                    <div v-html="item.content"></div>
                </aside>
            </draggable>

            <div class="">
                <aside class="input-group">
                    <input type="hidden" class="form-control" placeholder="Ảnh" v-model="addingAvatar">
                    <input type="hidden" class="form-control" placeholder="Ảnh" v-model="addingAvatar.content">
                    <div style="flex: 1;">
                        <input type="file" multiple class="form-control overflow-hidden w-100" id="addingAvatar"
                               @@change.stop="handleFileChange('addingAvatar', $event)">
                        <input type="text" class="form-control w-100" placeholder="Tiêu đề" v-model="addingAvatar.title">
                    </div>
                    <div class="input-group-addon text-center d-flex justify-content-center">
                        <button class="btn" @@click.prevent.stop="onAvatarAdded">
                            <i class="ti-plus"></i>
                        </button>
                    </div>
                </aside>
                <div class="editor"></div>
                @*<textarea type="text" class="form-control w-100" placeholder="Mô tả" v-model="addingAvatar.content"></textarea>*@
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Lưu" class="btn btn-primary" />
            </div>
        </div>
    </section>
</form>
@section Scripts {
    <script src="/lib/Vue.Draggable/Sortable.min.js"></script>
    <script src="/lib/Vue.Draggable/vuedraggable.umd.min.js"></script>
    <script>
        Vue.component('vue-draggable', window.vuedraggable)
        var app = new Vue({
            el: '#vueApp',
            data: {
                addingAvatar: {},
                avatars: @Html.Raw(Model.LienHe_ContentJSON != null ? JsonHelper.Serialize(Model.LienHe_Content) : "[]"),
            },
            watch: {

            },
            computed: {

            },
            methods: {
                async onAvatarAdded() {
                    
                    if (this.addingAvatar.size) {
                        var upload = new Upload(this.addingAvatar);
                        try {
                            let x = await upload.doUploadPromise();
                            console.log(x);
                            this.addingAvatar.avatar = x;
                            this.avatars.push(this.addingAvatar);

                        } catch (err) {
                            console.log(err)
                        }
                    } else {
                        this.avatars.push(this.addingAvatar);
                    }


                    this.addingAvatar = {};
                    editor.setData('')
                    $("#addingAvatar").val("");

                    $("[name=LienHe_ContentJSON]").val(JSON.stringify(this.avatars));
                },
                onAvatarRemoved(i) {
                    this.avatars.splice(i, 1);

                    $("[name=LienHe_ContentJSON]").val(JSON.stringify(this.avatars));
                },
                handleFileChange(model, e) {
                    let files = e.target.files;
                    let file = e.target.files[0];
                    console.log(model, e, file);
                    this[model] = file;
                },
            },
            mounted() {

            }
        })
    </script>
    <script src="~/lib/ckeditor5/build/ckeditor.js"></script>
    <script>
        $(document).ready(function () {

            ClassicEditor
                .create(document.querySelector('.editor'), ckeditor5Options)
                .then(editor => {
                    window.editor = editor;

                    editor.model.document.on('change', () => {
                        console.log('the data has changed!');
                        app.addingAvatar.content = editor.getData();
                    });

                })
                .catch(error => {
                    console.error('Oops, something went wrong!');
                    console.error('Please, report the following error on https://github.com/ckeditor/ckeditor5/issues with the build id and the error stack trace:');
                    console.warn('Build id: iydo686yl1oa-qrolc6ajm7ow');
                    console.error(error);
                });


        })
    </script>
}
